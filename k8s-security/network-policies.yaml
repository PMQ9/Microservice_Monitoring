# Kubernetes Network Policies - Zero Trust Networking
# Demonstrates enterprise security practices with network segmentation

---
# Deny all ingress traffic by default in default namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-ingress
  namespace: default
spec:
  podSelector: {}
  policyTypes:
    - Ingress

---
# Allow ingress to backend from frontend and monitoring
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-backend-ingress
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: backend
  policyTypes:
    - Ingress
  ingress:
    # Allow from frontend
    - from:
        - namespaceSelector: {}
          podSelector:
            matchLabels:
              app: frontend
      ports:
        - protocol: TCP
          port: 5000
    # Allow from monitoring namespace (for metrics scraping)
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 8000  # Prometheus metrics port

---
# Allow ingress to frontend from external traffic (Kubernetes API)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-frontend-ingress
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: frontend
  policyTypes:
    - Ingress
  ingress:
    # Allow from any source (simulating external traffic)
    - ports:
        - protocol: TCP
          port: 5000

---
# Deny all egress traffic by default in default namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-egress
  namespace: default
spec:
  podSelector: {}
  policyTypes:
    - Egress

---
# Allow backend egress to DNS, external APIs, and monitoring services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-backend-egress
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: backend
  policyTypes:
    - Egress
  egress:
    # Allow DNS (port 53)
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    # Allow to Jaeger (monitoring namespace)
    - to:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 4318  # OTLP HTTP

---
# Allow frontend egress to DNS, backend service, and monitoring services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-frontend-egress
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: frontend
  policyTypes:
    - Egress
  egress:
    # Allow DNS
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    # Allow to backend service
    - to:
        - podSelector:
            matchLabels:
              app: backend
      ports:
        - protocol: TCP
          port: 5000
    # Allow to Jaeger
    - to:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 4318

---
# Deny all ingress in monitoring namespace by default
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-ingress
  namespace: monitoring
spec:
  podSelector: {}
  policyTypes:
    - Ingress

---
# Allow ingress to monitoring services from default namespace and monitoring services themselves
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-monitoring-ingress
  namespace: monitoring
spec:
  podSelector: {}
  policyTypes:
    - Ingress
  ingress:
    # Allow from default namespace (services sending metrics/traces/logs)
    - from:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 4318  # Jaeger OTLP HTTP
        - protocol: TCP
          port: 3100  # Loki
        - protocol: TCP
          port: 9090  # Prometheus
        - protocol: TCP
          port: 9411  # Jaeger Zipkin
    # Allow internal monitoring service communication
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP

---
# Allow monitoring egress to external services and Kubernetes API
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-monitoring-egress
  namespace: monitoring
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    # Allow DNS
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    # Allow to default namespace (scraping metrics)
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 5000  # Application metrics port
        - protocol: TCP
          port: 8000  # Prometheus metrics port
    # Allow internal monitoring communication
    - to:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
